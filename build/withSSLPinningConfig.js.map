{"version":3,"file":"withSSLPinningConfig.js","sourceRoot":"","sources":["../src/withSSLPinningConfig.ts"],"names":[],"mappings":";;;;;;AAAA,4CAAoB;AAGb,MAAM,oBAAoB,GAO5B,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;IAC7B,MAAM,IAAI,GAAG,gDAAgD,CAAC;IAC9D,IAAI,YAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QACvB,YAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KACrB;IAED,2DAA2D;IAC3D,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;QACpD,IAAI,IAAI,GAAG,GAAG,IAAI,KAAK,IAAI,CAAC;KAC7B;IAED,6CAA6C;IAC7C,YAAE,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IACzD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAtBW,QAAA,oBAAoB,wBAsB/B","sourcesContent":["import fs from \"fs\";\nimport { ConfigPlugin } from \"@expo/config-plugins\";\n\nexport const withSSLPinningConfig: ConfigPlugin<{\n  sslConfig: {\n    hostName: string;\n    certificateSHAFinal: string;\n    certificateSHAIntermediate: string;\n    certificateSHARoot: string;\n  };\n}> = (config, { sslConfig }) => {\n  const path = \"modules/security/android/sslpinning.properties\";\n  if (fs.existsSync(path)) {\n    fs.unlinkSync(path);\n  }\n\n  // Create the ssl.properties file from the sslConfig object\n  let data = \"\";\n  for (const [key, value] of Object.entries(sslConfig)) {\n    data += `${key}=${value}\\n`;\n  }\n\n  // Write file in a sync way makes pod crashes\n  fs.writeFile(path, data, { encoding: \"utf8\" }, () => {});\n  return config;\n};\n"]}